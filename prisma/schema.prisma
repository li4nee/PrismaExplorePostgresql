// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         Int       @id @default(autoincrement()) // id le primary key banaucha
  name       String    @db.VarChar(191)
  email      String    @unique
  password   String? // oauth ko lagi we maynot have password
  post       Post[] // array cause one user multiple post .
  comment    Comment[]
  created_at DateTime  @default(now())
}

model Post {
  id            Int       @id @default(autoincrement())
  user          User      @relation(fields: [user_id], references: [id], onDelete: Cascade) // delete all the post made by the user when the user  deletes itself
  user_id       Int
  title         String
  description   String
  comment_count Int       @default(0)
  created_at    DateTime  @default(now())
  comment       Comment[]
}

model Comment {
  id        String   @id @default(uuid()) // uuid is 32 bit character random
  post      Post     @relation(fields: [post_id], references: [id], onDelete: Cascade)
  post_id   Int
  user      User     @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id   Int
  comment   String
  createdAt DateTime @default(now())
}
